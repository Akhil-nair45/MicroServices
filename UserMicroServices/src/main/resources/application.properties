spring.datasource.dbcp2.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://localhost:3306/MicroUser1
spring.datasource.username=root
spring.datasource.password=root

spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true

server.port= 9989
spring.application.name=USER-MICROSERVICE

spring.config.import= configserver:http://localhost:8989


## Set this property to true to enable the Config Server integration.
#spring.cloud.config.enabled=true
#
## Set the URL of the Config Server. Change the value to match your Config Server's URL.
#spring.cloud.config.uri=http://localhost:8989
#
## Set this property to true to make the configuration from the Config Server optional.
#spring.cloud.config.import-check.enabled=false

#spring.config.import=configserver:http://localhost:8989

# spring.config.import=optional:configserver:http://localhost:8989

#	To disable this check, set spring.cloud.config.enabled=false or 
#	spring.cloud.config.import-check.enabled=false.





#here we are commenting this 4 line as we are using config server so we dont need to write same thing again and again instead we are creating a repo in github and with the help of config server we are using it in every microservices this reduces redundancy
#eureka.client.fetch-registry=true
#eureka.client.register-with-eureka=true
#eureka.instance.prefer-ip-address=true
#eureka.client.service-url.defaultzone=http://localhost:9898/eureka/

